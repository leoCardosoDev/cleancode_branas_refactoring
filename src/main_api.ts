import CalculateRide from "./application/usecase/calculate_ride";
import CreatePassenger from "./application/usecase/create_passenger";
import CreateDriver from "./application/usecase/create_driver";
import GetPassenger from "./application/usecase/get_passenger";
import GetDriver from "./application/usecase/get_driver";
import DriverRepositoryDatabase from "./infra/repository/driver_repository_database";
import PassengerRepositoryDatabase from "./infra/repository/passenger_repository_database";
import PgPromiseAdapter from "./infra/database/pg_promise_adapter";
import MainController from "./infra/http/main_controller";
import ExpressAdapter from "./infra/http/express_adapter";

const connection = new PgPromiseAdapter();
const passengerRepository = new PassengerRepositoryDatabase(connection);
const driverRepository = new DriverRepositoryDatabase(connection);
const calculateRide = new CalculateRide();
const createPassenger = new CreatePassenger(passengerRepository);
const getPassenger = new GetPassenger(passengerRepository);
const createDriver = new CreateDriver(driverRepository);
const getDriver = new GetDriver(driverRepository);
const httpServer = new ExpressAdapter();
new MainController(httpServer, calculateRide, createPassenger, getPassenger, createDriver, getDriver);
httpServer.listen(3000);
